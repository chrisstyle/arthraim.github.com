<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Programing | Artoirus]]></title>
  <link href="http://artori.us/blog/categories/programing/atom.xml" rel="self"/>
  <link href="http://artori.us/"/>
  <updated>2012-12-13T13:39:37+08:00</updated>
  <id>http://artori.us/</id>
  <author>
    <name><![CDATA[Arthur Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[异或]]></title>
    <link href="http://artori.us/exclusive-or/"/>
    <updated>2012-12-13T12:36:00+08:00</updated>
    <id>http://artori.us/exclusive-or</id>
    <content type="html"><![CDATA[<p>不介绍什么是异或了，有人叫半加、数学系的叫按位模2加</p>

<p>下文用得到的一些简单的性质</p>

<ul>
<li><p><code>x^0 = x</code> 且 <code>x^x = 0</code></p></li>
<li><p>交换律：<code>x^y = y^x</code></p></li>
<li><p>结合律：<code>(x^y)^z = x^(y^z)</code></p></li>
<li><p>自反性：<code>x^y^y = x</code></p></li>
</ul>


<p>下面是几个小题目，可以用异或解决，挺有技巧性</p>

<h2>交换两个数ab</h2>

<p><code>ruby
a = a^b
b = a^b
a = a^b
</code></p>

<p>有意思的是搜索其他异或例子的时候，发现了<a href="http://blog.chinaunix.net/uid-1844931-id-3034714.html">这篇</a>文章，文章里实现了一个异或交换的算法，和本文主题无关，不过很有意思，函数更多的时候应该只操作值而不是变量。</p>

<h2>A集合里拿掉数x得到B集合，求x</h2>

<p>令<code>XOR(X)</code>表示将X集合内所有的数做异或</p>

<p><code>XOR(B)^XOR(A) = XOR(B)^XOR(B)^x = 0^x = x</code></p>

<p><code>ruby
A = (1..10000).to_a
B = A - [1234]
x = (A + B).reduce(&amp;:^)
puts x #1234
</code></p>

<p>via: <a href="http://www.javaeye.com/topic/420487">http://www.javaeye.com/topic/420487</a></p>

<h2>A集合里拿掉数x、y得到B集合，求x和y</h2>

<p>首先按上一个的办法可以推导出<code>xor(A)^xor(B) = xor(B)^xor(B)^x^y = 0^x^y = x^y</code></p>

<p><code>x^y</code>的二进制结果，第n位为1，说明x和y的第n位不相同</p>

<p>根据第n位是否为0把A里所有的数分成A1和A0两个数组（A1里的数的二进制第n位都是1，A0都是0）</p>

<p>A1和A0应该各包含了a或者b（这样第n位才能异或出1）</p>

<p>同理可以把B分成B1和B0两个数组</p>

<p>可以得到第一个数 <code>x = A1^B1</code></p>

<p>第二个数可以<code>y = A0^B0</code>，当然也可以用<code>x^y^x</code>求得</p>

<p>另外如果<code>x^y</code>为0，即<code>x == y</code>，令<code>SUM(X)</code>为X集合内所有数求和</p>

<p><code>(SUM(A) - SUM(B)) / 2 = x</code></p>

<p>via: <a href="http://blog.chinaunix.net/uid-12453618-id-2935334.html">http://blog.chinaunix.net/uid-12453618-id-2935334.html</a></p>

<h2>集合A里只有数x出现1次，其余数全都重复出现2次，求x</h2>

<p><code>xor(A) = x^y^y^…^z^z = x^(y^y^…^z^z) = x^0 = x</code></p>

<p><code>ruby
x = A.reduce(&amp;:^)
</code></p>

<h2>集合A里只有数x出现1次，其余数全都重复出现3次，求x</h2>

<p>xor的本质相当于“按位模2加”（adding modulo 2），令p1,p2…pn为布尔值，true为1、false为0，(+)表示异或操作。</p>

<p><code>p1 (+) p2 (+) ... (+) pn == ( p1 + p2 + ... + pn ) % 2</code></p>

<p>所以只需要实现按位模3加</p>

<p><code>( p1 + p2 + ... + pn ) % 3</code></p>

<p>将集合中所有数二进制表示的同一位的0或1相加，最终的和对3去摸，得到的数即是x</p>

<p>如 <code>A = {5, 7, 7, 7}</code>，二进制表示两个数</p>

<p>```ruby
  101
  111
  111</p>

<h2>+ 111</h2>

<p>  434</p>

<h2>%   3</h2>

<p>  101
```
但愿这坨东西能让人看懂</p>

<p>via: <a href="http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/BitOp/xor.html">http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/BitOp/xor.html</a></p>

<h2>没有<code>^</code>操作时候实现异或，只用<code>&amp;</code>与 <code>|</code>或 <code>~</code>非</h2>

<p>这里的转换有很多，比如下面这个</p>

<p><code>x ^ y == (~x &amp; y) | (x &amp; ~y)</code></p>

<p>具体查看<a href="http://en.wikipedia.org/wiki/Exclusive_or">维基百科</a> 《Equivalencies, elimination, and introduction》部分，各种公式</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode优化过的PNG]]></title>
    <link href="http://artori.us/optimized-png-in-xcode/"/>
    <updated>2012-12-12T00:07:00+08:00</updated>
    <id>http://artori.us/optimized-png-in-xcode</id>
    <content type="html"><![CDATA[<p>开始做iOS应用就有一个“公理”，<strong>图片素材要使用png格式</strong>，至于公理是怎么形成的完全不知道，只是听说在官方文档里提到过一句：苹果会对png进行优化。</p>

<p>为什么优化？谁优化的？什么时候优化的？怎么优化的？</p>

<p>和所有的魔术一样，说穿了就不好玩了。一切的根源是iPhone的显存。iPhone的vRAM在存放单个像素的颜色的时候，并不是按照传统的“红-绿-蓝”这样的顺序排列的，而是“蓝-绿-红”，即我们常说的RGB，在iPhone的显存里是BGR。并且，没有alpha通道。</p>

<p>另一边，png格式按照“红-绿-蓝”的顺序描述颜色，并且支持alpha通道的半透明，RGBA四个通道各占1个字节。</p>

<ul>
<li>为什么优化？
因为一边RGB一边BGR，一边有alpha一边没有alpha。</li>
<li>谁优化的？
文章标题已经剧透了，Xcode优化的。</li>
<li>什么时候优化的？
Xcode在编译时，会对png资源进行优化。</li>
<li>怎么优化的？
优化做了两件事：

<ol>
<li>把png里所有的RGB颜色转成BGR顺序</li>
<li>把png里所有的alpha通道先和RGB三通道先乘好（比如R:1 G:1 B:1 A:0.5的颜色直接转成 R:0.5 G:0.5 B:0.5）</li>
</ol>
</li>
</ul>


<p>这样最终设备在运行时渲染这些颜色的时候，不需要任何处理，一个汇编语句就把数据丢尽显存里了。</p>

<p>PS: <a href="http://developer.apple.com/library/ios/#qa/qa1681/_index.html">这里</a>还有一个手动转换，和还原的办法</p>

<p>via: <a href="http://iphonedevelopment.blogspot.jp/2008/10/iphone-optimized-pngs.html">http://iphonedevelopment.blogspot.jp/2008/10/iphone-optimized-pngs.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git修剪分支]]></title>
    <link href="http://artori.us/git-prune-branch/"/>
    <updated>2012-03-02T08:07:32+08:00</updated>
    <id>http://artori.us/git-prune-branch</id>
    <content type="html"><![CDATA[<p>项目运转的久了，很多个人的战略的bugfix的feature的分支一堆一堆，今天忍不住想清理一些已经被合并的分支。这里用到了几个相关的git命令。</p>

<ul>
<li><p><code>git branch</code> 可以查看本地有的分支，当前分支之前有个*。</p></li>
<li><p><code>git branch -r</code> 查看所有远程的分支（不代表远程还有的分支）</p></li>
<li><p><code>git branch -a --color</code> 查看所有分支（<code>--color</code>加颜色，绿色是tracking的）</p></li>
<li><p><code>git branch -d TAG</code> 删除本地分支，如果这个分支有没有合并的提交，git会提示你改用 <code>-D</code> 强制删除（或干脆别删除！）</p></li>
<li><p><code>git push REMOTE :TAG</code> 删除远程REMOTE（比如一般叫origin）分支，注意分支名前加冒号</p></li>
<li><p><code>git remote prune REMOTE</code> 这个指令比较特殊，如果你在A仓库上<code>git fetch</code>过，在B仓库用上一条命令删除了远程分支，那么A仓库里 <code>git branch -r</code> 还是可以看到已经删掉的分支。这个时候可以用这个命令修剪这些分支。</p></li>
<li><p><code>git prune</code> 在本地也可以使用，不过作用我还真不清楚，官方用推荐用 <code>git gc</code></p></li>
</ul>


<p>记录下，git真的很萌的你们不要黑他。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS 10.7.3用xcode提交二进制文件验证失败]]></title>
    <link href="http://artori.us/mac-os-10-7-3-breaks-xcode-binary-validation/"/>
    <updated>2012-02-13T04:27:59+08:00</updated>
    <id>http://artori.us/mac-os-10-7-3-breaks-xcode-binary-validation</id>
    <content type="html"><![CDATA[<p>近日在提交一个app的时候发生了奇怪的错误。错误如下：</p>

<p><a href="/mac-os-10-7-3-breaks-xcode-binary-validation/icon-dimensions-dont-meet-the-size-requirements/"><img src="/images/uploads/wp/icon-dimensions-dont-meet-the-size-requirements.png" alt="" /></a></p>

<blockquote><p>iPhone/iPod Touch: Icon.png: icon dimensions (0 x 0) don't meet the size requirements. The icon file must be 57x57 pixels, in .png format</p></blockquote>

<p>我使用的Xcode版本是4.2.1，其实一下子也懵了完全没头绪。我第一时间当然是以为我的Icon.png真的出问题了，因为偶尔我会自己用一个叫做prepo的app来把512的图标转成57像素的，所以我第一时间以为是它的问题。（因为它之前也把比如10k的blabla@2x.png转成了20k的blabla.png）。于是我用Photoshop重新转换了一个图标来试图解决这个错误，结果当然是失败了。</p>

<p>各种Google之后，问题被锁定到了Mac OS 10.7.3这个升级包上，升级了之后是第一次提交二进制文件。<a href="https://devforums.apple.com/message/611733">这个讨论</a>都已经说明了病灶在哪里。</p>

<p>Xcode提交当然还是存在问题，无法通过验证，而且暂时没法解决。但是办法还是有，使用更加原始的Application Loader来上传。于是我打开Application Loader并登陆之后问题又出现了。</p>

<p><a href="/mac-os-10-7-3-breaks-xcode-binary-validation/screen-shot-2012-02-10-at-12-16-13-pm/"><img src="/images/uploads/wp/Screen-Shot-2012-02-10-at-12.16.13-PM.png" alt="" /></a></p>

<p>嗯，自带的版本看来太老了。于是各种Google之后<a href="https://itunesconnect.apple.com/apploader/ApplicationLoader_2.5.1.dmg">新的版本</a>终于还是找到了。使用方法很简单，跟着向导一步一步做（前提是itunes connect上的应用已经waiting for upload状态）直到需要在硬盘选择文件。首先在Xcode里Product -> Build for -> Building for archiving。然后Xcode工程下Products目录，有个 工程名.app，右键Show in finder，在它的上一级目录里找到release版本的app。当然上传前要把它打包成zip文件，application loader不能指定.app。最后完成向导，文件终于上传成功鸟 -。- 然后可以等着review了。</p>

<p><strong>更新：</strong>好吧看到了新说法是只要装好Application Loader 2.5.1，重启xcode，clean工程，重新archive，然后就能通过验证了，不需要真的使用Application Loader上传。 没试过，不一定管用，可以试试看。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Phone版微博通]]></title>
    <link href="http://artori.us/windows-phone-wbt/"/>
    <updated>2011-12-12T00:53:41+08:00</updated>
    <id>http://artori.us/windows-phone-wbt</id>
    <content type="html"><![CDATA[<p>很久没有写博客了，已经有友联的童鞋抱怨了，最近这段时间很忙，几乎下班就没心情做自己的事情了。话说最近入手了一台WP7，三星focus，白菜价，手机丢了所以来不及等Nokia Lumia 800了，很急就入手了。话说这不是重点，我手痒然后卸掉了WP7sdk的beta2，装上了新的7.1，小玩了一下。</p>

<p>话说其实给WP7写应用还真的蛮好玩的，事实上marketplace实际上也比我想象的要热闹一点，所以还蛮有动力写点东西的，最近在公司写iOS的app，每天都是objective-c，捡起了以前的C#真是一下子觉得好厉害，一个天一个地啊，终于不用自己retain, release了。</p>

<p>对了写了两段还是没有说到重点，因为重点就一句话，在熟悉WP7的开发，所以写了个微博通的客户端，好吧只是调用api发个post的请求而已很简单，主要是自己熟悉一下。</p>

<p>对了东西已经开源了在<a href="https://github.com/Arthraim/WbtoMongo">这里</a></p>

<p>那写到这里就写完了。感叹一下，visual studio真的不错，现在.net的包管理也很方便！现在dotnet我已经算是局外人了，所以不嘴贫了 -。-</p>

<p>以上</p>
]]></content>
  </entry>
  
</feed>
